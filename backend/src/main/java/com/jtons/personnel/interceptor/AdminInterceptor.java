package com.jtons.personnel.interceptor;import com.auth0.jwt.JWT;import com.auth0.jwt.JWTVerifier;import com.auth0.jwt.algorithms.Algorithm;import com.auth0.jwt.exceptions.TokenExpiredException;import com.auth0.jwt.interfaces.DecodedJWT;import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;import org.apache.commons.lang3.StringUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.servlet.HandlerInterceptor;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;import java.io.PrintWriter;import java.util.Enumeration;import java.util.HashMap;import java.util.Map;public class AdminInterceptor implements HandlerInterceptor {//        @Autowired//    private UserInfoMapper userInfoMapper;//    public static final String TOKEN_HEADER = "Authorization";//    public static final String TOKEN_PREFIX = "Bearer ";//    private static final String SECRET = "HQ_LAB_WX";//    /**//     * 在请求处理之前进行调用（Controller方法调用之前）//     */////    private void failAuth(HttpServletResponse response){//        PrintWriter writer=null;//        try {//            writer=response.getWriter();////            String writen = new JSONObject((Map<String, Object>) ResResult.loginFail()).toString();//            ResResult  loginFail= ResResult.loginFail();//            JSONObject jsonObject=new JSONObject();//            jsonObject.put("code",loginFail.getCode());//            jsonObject.put("msg",loginFail.getMessage());//            jsonObject.put("data",loginFail.getData());//            String writen = jsonObject.toString();//            writer.write(writen);//            writer.flush();//        } catch (IOException e) {//            e.printStackTrace();//        }//    }//    @Override//    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)  {//        String url = request.getRequestURL().toString();//        Map map = new HashMap();//        response.setCharacterEncoding("UTF-8");//        response.setHeader("Content-Type", "text/html;charset=UTF-8");//        Enumeration headerNames = request.getHeaderNames();//////        while (headerNames.hasMoreElements()) {////            String key = (String) headerNames.nextElement();////            String value = request.getHeader(key);////            map.put(key, value);////        }//        String methods = request.getMethod();//        if(StringUtils.equals(methods,"OPTIONS")){//            return true;//        }////        String token = request.getHeader(TOKEN_HEADER);//        if(StringUtils.isEmpty(token)){//            failAuth(response);//            return false;//        }//        Algorithm algorithm = Algorithm.HMAC256(SECRET.getBytes());//        JWTVerifier jwtVerifier = JWT.require(algorithm).build();////        DecodedJWT decodedJWT;//        try {//            decodedJWT = jwtVerifier.verify(token.split(" ")[1]);//        }catch(TokenExpiredException e){//            // 密码过期逻辑//            failAuth(response);//            return false;////        }////        String account = decodedJWT.getClaim("name").asString();//        if(StringUtils.isEmpty(account)){//            failAuth(response);//            return false;//        }//        LambdaQueryWrapper<UserInfo> lamb = new LambdaQueryWrapper<UserInfo>();//        lamb.eq(UserInfo::getPhone,account);//        UserInfo nowUser = userInfoMapper.selectOne(lamb);//        SingleUser user = SingleUser.getInstance();//        user.setAccount(nowUser.getPhone());//        user.setId(nowUser.getId());//        user.setRole(nowUser.getRole());////        return true;//    }    }